# =============================================================================
# SPRING CLOUD GATEWAY APPLICATION CONFIGURATION
# =============================================================================

# Application Information
spring.application.name=api-gateway
spring.application.description=API Gateway Service
spring.application.version=@project.version@

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${SERVER_CONTEXT_PATH:/}
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

# Spring Boot Configuration
spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=false
spring.main.allow-circular-references=false

# =============================================================================
# EUREKA SERVICE DISCOVERY
# =============================================================================

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=${EUREKA_URL:http://eureka:password@localhost:8761/eureka}
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true

# =============================================================================
# SPRING CLOUD GATEWAY ROUTES
# =============================================================================

# Saloon Service Route
spring.cloud.gateway.routes[0].id=saloon-service
spring.cloud.gateway.routes[0].uri=lb://saloon-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/saloon/**
spring.cloud.gateway.routes[0].filters=AuthenticationFilter

# Booking Service Route
spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=lb://booking-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/appointment/**
spring.cloud.gateway.routes[1].filters=AuthenticationFilter

spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

spring.cloud.gateway.routes[4].id=identity-service
spring.cloud.gateway.routes[4].uri=lb://identity-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/auth/**
# spring.cloud.gateway.routes[4].filters=AuthenticationFilter  # Removed for token blacklist endpoints

# Swagger Documentation Routes
spring.cloud.gateway.routes[5].id=booking-service-swagger
spring.cloud.gateway.routes[5].uri=lb://booking-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/booking-service/v3/api-docs
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/booking-service/v3/api-docs, /v3/api-docs

spring.cloud.gateway.routes[6].id=saloon-service-swagger
spring.cloud.gateway.routes[6].uri=lb://saloon-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/saloon-service/v3/api-docs
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/saloon-service/v3/api-docs, /v3/api-docs

spring.cloud.gateway.routes[7].id=identity-service-swagger
spring.cloud.gateway.routes[7].uri=lb://identity-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/identity-service/v3/api-docs
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/identity-service/v3/api-docs, /v3/api-docs

spring.cloud.gateway.routes[8].id=notification-service-swagger
spring.cloud.gateway.routes[8].uri=lb://notification-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/notification-service/v3/api-docs
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/notification-service/v3/api-docs, /v3/api-docs



# =============================================================================
# OPENAPI/SWAGGER CONFIGURATION
# =============================================================================

# Swagger UI Configuration
springdoc.swagger-ui.urls[0].name=Booking Service
springdoc.swagger-ui.urls[0].url=/booking-service/v3/api-docs

springdoc.swagger-ui.urls[1].name=Saloon Service
springdoc.swagger-ui.urls[1].url=/saloon-service/v3/api-docs

springdoc.swagger-ui.urls[2].name=Identity Service
springdoc.swagger-ui.urls[2].url=/identity-service/v3/api-docs

springdoc.swagger-ui.urls[3].name=Notification Service
springdoc.swagger-ui.urls[3].url=/notification-service/v3/api-docs

# OpenAPI Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}

# Swagger UI Configuration
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.disable-swagger-default-url=false
springdoc.swagger-ui.use-root-path=false
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# =============================================================================
# JWT CONFIGURATION
# =============================================================================

jwt.secret=${JWT_SECRET:U2dWa1lwMzczNjc5NzkyRjQyRjQ1Mjg0ODJCNGRiNjI1MTY1NTQ2ODU3NmQ1YTcxNDc0Nw==}

# =============================================================================
# REDIS CONFIGURATION (for token blacklisting)
# =============================================================================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms

# Redis persistence configuration
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# =============================================================================
# DATABASE CONFIGURATION (for token blacklisting persistence)
# =============================================================================
# Local Development Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/baber_gateway?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# =============================================================================
# REDIS PERSISTENCE CONFIGURATION
# =============================================================================
# Redis persistence is configured in redis.conf
# RDB snapshots and AOF logs ensure data survives restarts

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging Levels
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.cloud.gateway=${LOG_LEVEL_GATEWAY:INFO}
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=${LOG_LEVEL_ROUTES:INFO}

# Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =============================================================================
# ACTUATOR CONFIGURATION
# =============================================================================

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,gateway
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:always}
management.endpoint.health.show-components=always
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# =============================================================================
# TRACING & MONITORING
# =============================================================================

# Distributed Tracing
spring.sleuth.enabled=${SLEUTH_ENABLED:false}
spring.zipkin.enabled=${ZIPKIN_ENABLED:false}
spring.zipkin.base-url=${ZIPKIN_URL:http://localhost:9411}
management.tracing.enabled=${TRACING_ENABLED:false}
management.tracing.sampling.probability=${TRACING_SAMPLING_PROBABILITY:1.0}

# =============================================================================
# PERFORMANCE & RESILIENCE
# =============================================================================

# Connection Timeouts
spring.cloud.gateway.httpclient.connect-timeout=${GATEWAY_CONNECT_TIMEOUT:5000}
spring.cloud.gateway.httpclient.response-timeout=${GATEWAY_RESPONSE_TIMEOUT:30s}

# Circuit Breaker Configuration
spring.cloud.gateway.filter.circuit-breaker.enabled=${CIRCUIT_BREAKER_ENABLED:false}

# Rate Limiting Configuration (Disabled for now - requires Redis)
# spring.cloud.gateway.default-filters[0]=RequestRateLimiter=10, 1, 1s

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
spring.web.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
spring.web.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature Toggles
app.features.audit-logging=${AUDIT_LOGGING_ENABLED:true}
app.features.rate-limiting=${RATE_LIMITING_ENABLED:true}
app.features.circuit-breaker=${CIRCUIT_BREAKER_ENABLED:false}
app.features.gateway-monitoring=${GATEWAY_MONITORING_ENABLED:true}
